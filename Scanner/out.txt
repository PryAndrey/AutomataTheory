DOT (1, 1) "."
INTEGER (1, 2) "89037742087513,"
COMMA (1, 16) ","
INTEGER (1, 17) "39566447245273="
EQ (1, 31) "="
LEFT_PAREN (1, 32) "("
INTEGER (1, 33) "3 "
ELSE (1, 35) "ELSE"
OR (1, 40) "OR"
PLUS (1, 42) "+"
COLON (1, 43) ":"
COMMA (1, 44) ","
THEN (1, 45) "THEN"
MINUS (1, 49) "-"
ASSIGN (1, 50) ":="
EQ (1, 52) "="
RIGHT_BRACKET (1, 53) "]"
LESS (1, 54) "<"
FLOAT (2, 1) "567347871240000578793916224691717.02886273947434583581237906 "
PROGRAM (2, 62) "PROGRAM"
DOT (2, 69) "."
LEFT_BRACKET (2, 70) "["
IF (2, 71) "IF"
GREATER_EQ (5, 460) ">="
GREATER (5, 462) ">"
PLUS (5, 463) "+"
VAR (5, 464) "VAR"
STRING (5, 467) "'1ysfzLOBEGIN$k	;P END= arraYOZ_/n	\]`lqd}mn{k5xBEGDIN VAR VAR  PROCEDUREy~e|Z%jpG^=["pVuy ENDTHEN 57@KthenV Bzn5h+XC PROGRAMOReTHen;VAR>INhD!Rnc-DBeGin C*YjOb_H~3#JLX pRoceduReTHENW6 xuQK!@48pps2<\M>\'"
OF (5, 669) "OF"
LEFT_BRACKET (5, 671) "["
GREATER (5, 672) ">"
END (5, 673) "END"
VAR (5, 677) "VAR"
LEFT_PAREN (5, 680) "("
GREATER (5, 681) ">"
RIGHT_PAREN (5, 682) ")"
GREATER_EQ (5, 683) ">="
COLON (5, 685) ":"
RIGHT_BRACKET (5, 686) "]"
OR (5, 687) "OR"
RIGHT_BRACKET (5, 689) "]"
PROCEDURE (5, 690) "PROCEDURE"
BEGIN (5, 700) "BEGIN"
IDENTIFIER (5, 706) "sARRAYVARLJYELsevGpa4VpROcEDUREZvEygelSeEOFcAmItt7SORa4JkTYPE7tHEnZARRAY4q2THENiltlhIAlkxa8IfcGRwhhu5eENDvORche4WBucjFOFttTPROCEDURE6kELSEMVQprogrAmelSE7ygtoVPROGRAMgBPRoGRAmVAR9iifXqsjarrAYZBEgiN9hZwdfITHENQ3eei1LGATzxgoORS0xsORMj"
THEN (5, 938) "THEN"
GREATER (6, 1) ">"
THEN (6, 2) "THEN"
OR (14, 105) "OR"
PLUS (14, 107) "+"
STRING (15, 1) "'bNP^WTAZ<u@_OzW(v+B gT^Mn%aUD+m6Q>a/8c!C5kz!j,XR^?sz%lgfl>m 2=22;y\`>9$Zty!PWeIyz^CPROGRAM>}Uu|J6<B f11{7yCKVC: PrgOWCed0Ure)k"Xl|L=.b"bPROGRAM Z958x@n;i_hJ/z<HGnFhNHkMA<,p!JO(R-pnQ7 Fr&]M& BEGINc\B3N'"
OF (15, 203) "OF"
DOT (15, 205) "."
MINUS (15, 206) "-"
SEMICOLON (15, 207) ";"
TYPE (15, 208) "TYPE"
EQ (15, 212) "="
END (15, 213) "END"
DIVIDE (15, 216) "/"
LEFT_BRACKET (15, 217) "["
PROCEDURE (16, 1) "PROCEDURE"
EQ (16, 10) "="
PROGRAM (16, 11) "PROGRAM"
PLUS (16, 18) "+"
ELSE (16, 19) "ELSE"
IDENTIFIER (16, 24) "ixKeNDgiEnDGgBARRAYBOFF0p4ELSEEPROCEDUREssunn8NFtJhiaRRAycmvArZuPRoCEdUrepPROCEDUREAvf0XzlbPVPROGRAMlBEGINMofgPrOCEduReEnd1zqXbeGINELSEy8SxUORmOFDOfACTHenEND41arrAyBEGINOFSDORZOenD2a9_iPROGRAMBEGINProgrAmORx7v7XEKCelse0P"
ELSE (16, 245) "ELSE"
ELSE (16, 250) "ELSE"
IF (16, 255) "IF"
LEFT_BRACKET (16, 257) "["
LESS (16, 258) "<"
PROCEDURE (16, 259) "PROCEDURE"
DOT (16, 268) "."
LESS (16, 269) "<"
GREATER_EQ (16, 271) ">="
VAR (16, 273) "VAR"
ASSIGN (16, 276) ":="
ASSIGN (16, 278) ":="
COMMA (16, 280) ","
THEN (16, 281) "THEN"
END (16, 286) "END"
END (16, 290) "END"
MULTIPLICATION (16, 293) "*"
MINUS (16, 294) "-"
IDENTIFIER (16, 295) "aARRAYOFBEGINvd2ENdq5RArrAyARRAYPROGRAMGyfoWVARofBEGINSxboKJlTOf_R0oofeLsEbIfoUrPROCEDUREIF2ju0"
EQ (16, 390) "="
RIGHT_BRACKET (16, 391) "]"
OR (16, 392) "OR"
OR (16, 395) "OR"
GREATER_EQ (16, 397) ">="
PROGRAM (16, 399) "PROGRAM"
RIGHT_BRACKET (16, 406) "]"
DIVIDE (16, 407) "/"
LESS_EQ (16, 408) "<="
MULTIPLICATION (16, 410) "*"
BAD (16, 412) "123."
